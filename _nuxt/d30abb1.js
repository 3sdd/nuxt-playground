(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{230:function(t,e,n){"use strict";n.r(e);var o=n(1);const r=/^[a-z]{2}$/i,c=127397;function d(t){if(!r.test(t)){const e=typeof t;throw new TypeError(`cc argument must be an ISO 3166-1 alpha-2 string, but got '${"string"===e?t:e}' instead.`)}const e=[...t.toUpperCase()].map((t=>t.codePointAt()+c));return String.fromCodePoint(...e)}var m=o.default.extend({data:function(){return{}},methods:{countryCodeEmoji:d,emojiCountryCode:function(t){if(4!==t.length){const e=typeof t;throw new TypeError(`flag argument must be a flag emoji, but got '${"string"===e?t:e}' instead.`)}const e=[...t].map((t=>t.codePointAt()-c));return String.fromCodePoint(...e)}}}),l=n(35),component=Object(l.a)(m,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("h1",[t._v("country-code-emoji")]),t._v(" "),n("div",[t._m(0),t._v(" "),n("div",[t._v("\n            emoji:"),n("span",[t._v(t._s(t.countryCodeEmoji("JP")))]),t._v(" "),n("br"),t._v("\n            country code:"),n("span",[t._v(t._s(t.emojiCountryCode("ðŸ‡¯ðŸ‡µ")))])])])])}),[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("a",{attrs:{href:"https://github.com/thekelvinliu/country-code-emoji"}},[t._v("https://github.com/thekelvinliu/country-code-emoji")])])}],!1,null,null,null);e.default=component.exports}}]);